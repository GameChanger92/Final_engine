name: CI

on:
  push:
    branches: ["*"]          # 모든 브랜치에서 푸시 시 동작
  pull_request:
    branches: ["*"]          # 모든 브랜치 PR에서 동작

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job_type: [unit, bench]

    steps:
      # 1) 소스 체크아웃
      - uses: actions/checkout@v4

      # 2) 파이썬 설치
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3) 의존성 + 포매터/린터 설치
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install black ruff pytest

      # 4) 품질 검사 (Ruff → Black) - 단위 테스트에서만 실행
      - name: Ruff Lint
        if: matrix.job_type == 'unit'
        run: ruff check .

      - name: Black Check
        if: matrix.job_type == 'unit'
        run: black --check .

      # 5) 테스트 실행
      - name: Run pytest
        env:
          UNIT_TEST_MODE: ${{ matrix.job_type == 'unit' && '1' || '0' }}
          FAST_MODE: ${{ matrix.job_type == 'bench' && '1' || '0' }}
        run: pytest -q

      # 6) 스모크 파이프라인 - 벤치마크에서만 실행
      - name: Test pipeline script
        if: matrix.job_type == 'bench'
        env:
          UNIT_TEST_MODE: "1"
          FAST_MODE: "1"
          # ↓ 실제 API 키를 넣고 싶으면, 두 줄 주석 해제
          # GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          # OPENAI_API_KEY:  ${{ secrets.OPENAI_API_KEY }}
        run: python scripts/run_pipeline.py --project-id default --episodes 2
