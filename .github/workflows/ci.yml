name: CI

on:
  push:
    branches: ["*"]          # 모든 브랜치에서 푸시 시 동작
  pull_request:
    branches: ["*"]          # 모든 브랜치 PR에서 동작

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job_type: [unit, bench]
    
    env:                     # 👈 매트릭스별 환경변수 설정
      UNIT_TEST_MODE: ${{ matrix.job_type == 'unit' && '1' || '0' }}
      FAST_MODE: ${{ matrix.job_type == 'bench' && '1' || '0' }}

    steps:
      # 1) 소스 체크아웃
      - uses: actions/checkout@v4

      # 2) 파이썬 설치
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3) 의존성 + 포매터/린터 설치
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install black ruff pytest

      # 4) 품질 검사 (unit 테스트에서만 실행)
      - name: Ruff Lint
        if: matrix.job_type == 'unit'
        run: ruff check .

      - name: Black Check
        if: matrix.job_type == 'unit'
        run: black --check .

      # 5) 단위 테스트 (unit에서는 UNIT_TEST_MODE=1, FAST_MODE=0)
      - name: Run pytest (Unit Tests)
        if: matrix.job_type == 'unit'
        run: pytest -q

      # 6) 벤치마크/통합 테스트 (bench에서는 UNIT_TEST_MODE=0, FAST_MODE=1)
      - name: Test pipeline script (Benchmark)
        if: matrix.job_type == 'bench'
        run: python scripts/run_pipeline.py --project-id default --episodes 2
